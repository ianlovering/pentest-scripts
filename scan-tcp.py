#!/usr/bin/python

# Args
# IP Address
# Nessus Policy

import sys
import os
os.chdir(os.path.dirname(sys.argv[0]))

import subprocess
import xml.etree.ElementTree as et
import myscanner 

import argparse

parser = argparse.ArgumentParser()
parser.add_argument("output_dir", help="Directory where nmap output is saved")
parser.add_argument("ip_address", help="IP address of the target to be scanned")
args = parser.parse_args()

save_folder = args.output_dir
ipaddress = args.ip_address

###############################################################################
def create_scan(scanner, policy_name, ipaddress, tcp_ports=""):

    scan_name = policy_name + " (" + ipaddress + ")"

    if tcp_ports:
        scanner.policy_copy(policy_name, scan_name)
        scanner.policy_limit_ports(tcp_ports)
    else:
        scanner.policy_set(policy_name)

    scanner.tag_name = "Waiting"
    scanner.scan_add(targets=ipaddress, name=scan_name)

###############################################################################

try:
    scanner = myscanner.get_scanner()

    file_prefix = save_folder + "/" + ipaddress + ".tcp.all"

    if myscanner.do_nmap:
        subprocess.check_call(["nmap","-vv","--reason","-sS","-A","--version-all","-p-","-oA",file_prefix,ipaddress])

    tree = et.parse(file_prefix + ".xml")
    root = tree.getroot()

    for host in root.findall(".//host/status[@state='up']/.."):
        ipaddress = host.find(".//address[@addrtype='ipv4']").get('addr')

        tcp_ports = ""
        for port in host.findall(".//state[@state='open']/..[@protocol='tcp']"):
            tcp_ports += port.get('portid') + ','

            if int(port.get('portid')) == 445:
                if myscanner.do_build_review:
                    create_scan(scanner, myscanner.wbuild_policy, ipaddress)
                if do_patch_check:
                    create_scan(scanner, myscanner.wpatch_policy, ipaddress)

        create_scan(scanner, myscanner.inf_policy, ipaddress, tcp_ports)

except Exception, e:
    print "Error"
    print e

